<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace: 写接口全类名，相当于告诉mybatis这个配置文件是实现了哪个接口-->
<mapper namespace="ssm.mybatis.mapper.EmployeeMapper">
<cache-ref namespace="ssm.mybatis.mapper.TeacherMapper"/>
    <select id="getT" resultType="ssm.mybatis.bean.Employee">
    select * from t_employee where id = #{id}
  </select>

    <select id="getTByIdAndEmpName" resultType="ssm.mybatis.bean.Employee">
    select * from t_employee where id = #{id} and empname=#{empname}
  </select>
<!--获取自增的主键 useGeneratedKeys 是否使用自动生成的主键，keyProperty 将生成的主键赋值给id-->
<!--    <insert id="insert" useGeneratedKeys="true" keyProperty="id">-->
<!--    INSERT INTO `t_employee` (`empname`,`gender`,`email`) VALUES (#{empname},#{gender},#{email})-->
<!--    </insert>-->

<!--获取非自增的主键：
order="BEFORE" 在插入方法以前运行
resultType="Integer" 这里必须指定结果类型，keyProperty="id"将结果赋值给哪个属性
-->
    <insert id="insert">
<selectKey order="BEFORE" resultType="Integer" keyProperty="id">
    SELECT MAX(id)+1 FROM t_employee
</selectKey>
    INSERT INTO `t_employee` (id,`empname`,`gender`,`email`) VALUES (#{id},#{empname},#{gender},#{email})
    </insert>

    <update id="upDate">
 UPDATE `t_employee` SET `empname`= #{empname},`gender`= #{gender} ,`email`= #{email} WHERE id= #{id}
    </update>

    <delete id="delete">
DELETE FROM`t_employee` WHERE id=#{id}
    </delete>


<!--List<Employee> getAllEmployee();-->
    <select id="getAllEmployee" resultType="ssm.mybatis.bean.Employee">
        SELECT * FROM t_employee
    </select>

<!--    Map<String, Object> getOneReturnMap();-->
    <select id="getOneReturnMap" resultType="map" >
        SELECT * FROM t_employee where id=#{id}
    </select>

<!--    @MapKey("id")-->
<!--    Map<Integer, Employee> getAllReturnMap();-->
    <select id="getAllReturnMap" resultType="ssm.mybatis.bean.Employee">
        SELECT * FROM t_employee
    </select>




</mapper>